(racket-define -         racket--)
(racket-define /         racket-/)
(racket-define *         racket-*)
(racket-define cons      racket-mcons)
(racket-define inside    racket-get-output-string)
(racket-define instring  racket-open-input-string)
(racket-define nil       (racket-quote nil))
(racket-define outstring racket-open-output-string)
(racket-define t         (racket-quote t))
(racket-define uniq      racket-gensym)

(racket-define (ar-r/list-toarc x)
  (racket-cond
   ((racket-pair? x)
    (racket-mcons (racket-car x) (ar-r/list-toarc (racket-cdr x))))
   ((racket-null? x)
    (racket-quote nil))
   (racket-else x)))

(racket-define (list . args)
  (ar-r/list-toarc args))

(racket-define (ar-list-fromarc x)
  (racket-cond
   ((racket-mpair? x)
    (racket-cons (racket-mcar x) (ar-list-fromarc (racket-mcdr x))))
   ((racket-eq? x (racket-quote nil))
    (racket-quote ()))
   (racket-else x)))
